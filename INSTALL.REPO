    Copyright 2013, 2014
      Free Software Foundation, Inc.

    Last Update: 8 Aug 2014

    Copying and distribution of this file, with or without
    modification, are permitted in any medium without royalty provided
    the copyright notice and this notice are preserved.

This file contains information that supplements the generic
installation instructions in file `INSTALL'.  It is meant for
people building directly from the development repository, rather than
a release or snapshot tarball .

If you want to start compiling the `groff' system with an existing
script `configure' you won't need the information in this file.

But if you want to build groff from the git repository, you should
first type:

    $ ./bootstrap

This will clone the gnulib repository as a git submodule in the gnulib
directory, and invoke the `GNU autotools' (`aclocal', `autoreconf')
for creating the following and some more files:

    aclocal.m4
    configure
    Makefile.in

To change the file `aclocal.m4', run the shell command

    $ aclocal -I m4

Note that the groff m4 macros are included via the acinclude.m4 file.

To recreate the files `configure' and `Makefile', use the shell
command

    $ autoreconf -I m4

The option `-I m4' is necessary.  It refers to the subdirectory `m4'
that has files with m4 macro definitions needed by the `autotools'.

If you use an old `autoreconf' version < 2.69, there might be an error
warning like:

  /usr/share/aclocal/gtkglextmm-1.2.m4:225:
    warning: underquoted definition of AC_GTKGLEXTMM_SUPPORTS_MULTIHEAD
  /usr/share/aclocal/gtkglextmm-1.2.m4:225:
    run info '(automake)Extending aclocal'
  /usr/share/aclocal/gtkglextmm-1.2.m4:225:
    or see http://www.gnu.org/software/automake/manual/automake.html#Extending-aclocal

Just ignore this.  It doesn't occur in the actual versions of
`autoreconf'.

You may even use the shell command

    $ autoconf

instead of `autoreconf', but that will ignore some features.  So
`autoreconf' is better.

If you modified only a .am file (for example to add a .c file), you
can just call:

    $ automake

This will regenerate the Makefile.in. Then, instead of calling again
the configure script, you can call:

    $ ./config.status

to regenerate the Makefile, and invoke make.

After the use of the `GNU autotools', the usual compilation should
work.  If the run of `configure' produces error reports you have
produced errors in the `autotools' modification.

The groff build system supports out of source build:
    $ mkdir build
    $ cd build
    $ ../configure
    $ make

Parallel build is also supported and make can be invoked with the -j
option.
